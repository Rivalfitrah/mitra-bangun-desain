generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique
  password String
  confirmPassword String
  status String @default("pending")
  metode String @default("manual")
  createdAt DateTime @default(now())
  profil Profil?
  signature Signature?
  documentSigners DocumentSigner[]
  uploadedDocuments Document[]
}

model Profil {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  nama      String
  alamat    String
  phone     String
  role      String
  imageUrl  String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Signature {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int      @unique
  manualUrl  String?  // tanda tangan dari canvas
  uploadUrl  String?  // tanda tangan hasil upload
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  isActive   Boolean  @default(true)
}

model Document {
  id        Int      @id @default(autoincrement())
  title     String
  type      String
  content   String
  docType   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  customId  String   @unique
  uploaderId Int?
  uploader   User?    @relation(fields: [uploaderId], references: [id])
  signers   DocumentSigner[]
}

model DocumentSigner {
  id         Int       @id @default(autoincrement())
  documentId Int
  userId     Int
  status     String    @default("pending") // pending, signed, rejected
  signedAt   DateTime?

  document   Document  @relation(fields: [documentId], references: [id])
  user       User      @relation(fields: [userId], references: [id])
}
